import { introspect } from '../definition';
import { assert } from 'chai';
import { resolveIntegration } from './index';

test.skip('introspect federation', async () => {
	const federated = await introspect.federation({
		apiNamespace: 'federation',
		upstreams: [
			{ url: 'http://localhost:4001/graphql' },
			{ url: 'http://localhost:4002/graphql' },
			{ url: 'http://localhost:4003/graphql' },
			{ url: 'http://localhost:4004/graphql' },
		],
	});
	assert.notEqual(federated.Schema, '');
});

test('resolveIntegration', async () => {
	const raw =
		'{"organization":"jensneuse","name":"countries","keywords":["countries","trevor","trevorblades"],"shortDescription":"The Countries API from Trevor Blades","markdownDescription":"","repositoryUrl":"","sdkVersion":"","definition":{"DataSources":[{"ChildNodes":[{"fieldNames":["code","name","countries"],"typeName":"countries_Continent"},{"fieldNames":["code","name","native","phone","continent","capital","currency","languages","emoji","emojiU","states"],"typeName":"countries_Country"},{"fieldNames":["code","name","native","rtl"],"typeName":"countries_Language"},{"fieldNames":["code","name","country"],"typeName":"countries_State"}],"Custom":{"Federation":{"Enabled":false,"ServiceSDL":""},"Fetch":{"body":{"environmentVariableDefaultValue":"","environmentVariableName":"","kind":0,"placeholderVariableName":"","staticVariableContent":""},"header":{},"method":1,"query":[],"url":{"environmentVariableDefaultValue":"https://countries.trevorblades.com/","environmentVariableName":"COUNTRIES_URL","kind":1,"placeholderVariableName":"","staticVariableContent":""}},"Subscription":{"Enabled":false,"URL":{"environmentVariableDefaultValue":"","environmentVariableName":"","kind":0,"placeholderVariableName":"","staticVariableContent":""}},"UpstreamSchema":"\\"\\"\\"\\"\\"\\"\\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\\n\\n\\"\\"\\"\\"\\"\\"\\ntype Query {\\n  continents(filter: ContinentFilterInput): [Continent!]!\\n  continent(code: ID!): Continent\\n  countries(filter: CountryFilterInput): [Country!]!\\n  country(code: ID!): Country\\n  languages(filter: LanguageFilterInput): [Language!]!\\n  language(code: ID!): Language\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\ninput ContinentFilterInput {\\n  code: StringQueryOperatorInput\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\ninput StringQueryOperatorInput {\\n  eq: String\\n  ne: String\\n  in: [String]\\n  nin: [String]\\n  regex: String\\n  glob: String\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\ntype Continent {\\n  code: ID!\\n  name: String!\\n  countries: [Country!]!\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\ntype Country {\\n  code: ID!\\n  name: String!\\n  native: String!\\n  phone: String!\\n  continent: Continent!\\n  capital: String\\n  currency: String\\n  languages: [Language!]!\\n  emoji: String!\\n  emojiU: String!\\n  states: [State!]!\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\ntype Language {\\n  code: ID!\\n  name: String\\n  native: String\\n  rtl: Boolean!\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\ntype State {\\n  code: String\\n  name: String!\\n  country: Country!\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\ninput CountryFilterInput {\\n  code: StringQueryOperatorInput\\n  currency: StringQueryOperatorInput\\n  continent: StringQueryOperatorInput\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\ninput LanguageFilterInput {\\n  code: StringQueryOperatorInput\\n}\\n\\n\\"\\"\\"\\"\\"\\"\\nenum CacheControlScope {\\n  \\"\\"\\"\\"\\"\\"\\n  PUBLIC\\n  \\"\\"\\"\\"\\"\\"\\n  PRIVATE\\n}\\n\\n\\"\\"\\"The `Upload` scalar type represents a file upload.\\"\\"\\"\\nscalar Upload\\n"},"Directives":[{"directiveName":"countries_cacheControl","renameTo":"cacheControl"}],"Kind":2,"RootNodes":[{"fieldNames":["countries_continents","countries_continent","countries_countries","countries_country","countries_languages","countries_language"],"typeName":"Query"}]}],"DefaultFlushInterval":500,"Fields":[{"argumentsConfiguration":[{"name":"filter","renderConfiguration":0,"sourcePath":[],"sourceType":1}],"disableDefaultFieldMapping":false,"fieldName":"countries_continents","path":["continents"],"requiresFields":[],"typeName":"Query","unescapeResponseJson":false},{"argumentsConfiguration":[{"name":"code","renderConfiguration":0,"sourcePath":[],"sourceType":1}],"disableDefaultFieldMapping":false,"fieldName":"countries_continent","path":["continent"],"requiresFields":[],"typeName":"Query","unescapeResponseJson":false},{"argumentsConfiguration":[{"name":"filter","renderConfiguration":0,"sourcePath":[],"sourceType":1}],"disableDefaultFieldMapping":false,"fieldName":"countries_countries","path":["countries"],"requiresFields":[],"typeName":"Query","unescapeResponseJson":false},{"argumentsConfiguration":[{"name":"code","renderConfiguration":0,"sourcePath":[],"sourceType":1}],"disableDefaultFieldMapping":false,"fieldName":"countries_country","path":["country"],"requiresFields":[],"typeName":"Query","unescapeResponseJson":false},{"argumentsConfiguration":[{"name":"filter","renderConfiguration":0,"sourcePath":[],"sourceType":1}],"disableDefaultFieldMapping":false,"fieldName":"countries_languages","path":["languages"],"requiresFields":[],"typeName":"Query","unescapeResponseJson":false},{"argumentsConfiguration":[{"name":"code","renderConfiguration":0,"sourcePath":[],"sourceType":1}],"disableDefaultFieldMapping":false,"fieldName":"countries_language","path":["language"],"requiresFields":[],"typeName":"Query","unescapeResponseJson":false}],"Schema":"\\"\\"\\"\\"\\"\\" directive@countries_cacheControl(maxAge:Int scope:countries_CacheControlScope)on FIELD_DEFINITION|OBJECT|INTERFACE \\"\\"\\"The directive @internal marks a variable definition as internal so that clients can\'t access it.\\nThe field is also not visible in the public API.\\nIt\'s only being used as an internal variable to export fields into.\\"\\"\\" directive@internal on VARIABLE_DEFINITION \\"\\"\\"The @transform directive allows to apply transformations to the response.\\nBy applying the directive, the shape of the response can be altered,\\nwhich will also modify the JSON-Schema of the response.\\nThat is, you will keep full type safety and code-generation for transformed fields.\\"\\"\\" directive@transform(\\"\\"\\"Using the \'get\' transformation allows you to extract a nested field using a JSON path.\\nThis is useful to unnest data, e.g. when using the \'_join\' field, which adds an extra layer of nesting.\\n\\nExample:\\n\\nquery GetName {\\n    name: me @transform(get: \\"info.name\\") {\\n        info {\\n            name\\n        }\\n    }\\n}\\n\\nBefore the transformation, the resolve looks like this:\\n\\n{\\n    \\"name\\": {\\n        \\"info\\": {\\n            \\"name\\": \\"John Doe\\"\\n        }\\n    }\\n}\\n\\nWith the transformation applied, the response will be reshaped like this:\\n\\n{\\n    \\"name\\": \\"John Doe\\"\\n}\\"\\"\\" get:String)on FIELD type Query{countries_continents(filter:countries_ContinentFilterInput):[countries_Continent!]!countries_continent(code:ID!):countries_Continent countries_countries(filter:countries_CountryFilterInput):[countries_Country!]!countries_country(code:ID!):countries_Country countries_languages(filter:countries_LanguageFilterInput):[countries_Language!]!countries_language(code:ID!):countries_Language}\\"\\"\\"\\"\\"\\" input countries_ContinentFilterInput{code:countries_StringQueryOperatorInput}\\"\\"\\"\\"\\"\\" input countries_StringQueryOperatorInput{eq:String ne:String in:[String]nin:[String]regex:String glob:String}type countries_Continent{code:ID!name:String!countries:[countries_Country!]!}type countries_Country{code:ID!name:String!native:String!phone:String!continent:countries_Continent!capital:String currency:String languages:[countries_Language!]!emoji:String!emojiU:String!states:[countries_State!]!}type countries_Language{code:ID!name:String native:String rtl:Boolean!}type countries_State{code:String name:String!country:countries_Country!}\\"\\"\\"\\"\\"\\" input countries_CountryFilterInput{code:countries_StringQueryOperatorInput currency:countries_StringQueryOperatorInput continent:countries_StringQueryOperatorInput}\\"\\"\\"\\"\\"\\" input countries_LanguageFilterInput{code:countries_StringQueryOperatorInput}\\"\\"\\"\\"\\"\\" enum countries_CacheControlScope{\\"\\"\\"\\"\\"\\" PUBLIC \\"\\"\\"\\"\\"\\" PRIVATE}\\"\\"\\"The `Upload` scalar type represents a file upload.\\"\\"\\" scalar countries_Upload","Types":[{"renameTo":"ContinentFilterInput","typeName":"countries_ContinentFilterInput"},{"renameTo":"StringQueryOperatorInput","typeName":"countries_StringQueryOperatorInput"},{"renameTo":"Continent","typeName":"countries_Continent"},{"renameTo":"Country","typeName":"countries_Country"},{"renameTo":"Language","typeName":"countries_Language"},{"renameTo":"State","typeName":"countries_State"},{"renameTo":"CountryFilterInput","typeName":"countries_CountryFilterInput"},{"renameTo":"LanguageFilterInput","typeName":"countries_LanguageFilterInput"},{"renameTo":"CacheControlScope","typeName":"countries_CacheControlScope"},{"renameTo":"Upload","typeName":"countries_Upload"}],"interpolateVariableDefinitionAsJSON":[]},"isPublic":true,"placeholders":[{"name":"COUNTRIES_URL","optional":true}]}';
	const api = await resolveIntegration(
		raw,
		{
			COUNTRIES_URL: 'https://countries.trevorblades.com/',
		},
		'countries'
	);
	expect(JSON.stringify(api, null, 2)).toMatchSnapshot();
});
